@model List<ArandanoIRT.Web._3_Presentation.ViewModels.Analysis.CropMonitorViewModel>
@using ArandanoIRT.Web._0_Domain.Common
@using ArandanoIRT.Web._0_Domain.Enums

@{
    ViewData["Title"] = "Monitor de Cultivo y Analíticas";
    Layout = "_AdminLayout";
    string GetStatusClass(PlantStatus status) => status switch
    {
        PlantStatus.OPTIMAL => "status-optimal",
        PlantStatus.RECOVERING => "status-recovering",
        PlantStatus.MILD_STRESS => "status-mild-stress",
        PlantStatus.SEVERE_STRESS => "status-severe-stress",
        PlantStatus.UNKNOWN => "status-unknown",
        _ => "status-default"
    };
}

@section Styles {
    <link rel="stylesheet" href="~/css/plantStatus.css" asp-append-version="true" />
}

<div class="page-header">
    <h1>@ViewData["Title"]</h1>
</div>
<p class="lead mb-4">Supervisa el estado actual de todas tus plantas y accede a los análisis detallados.</p>

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger" role="alert">
        <i class="fas fa-exclamation-triangle me-2"></i>
        @TempData["ErrorMessage"]
    </div>
}

@if (!Model.Any())
{
    <div class="alert alert-info">No hay cultivos registrados en el sistema.</div>
}

@foreach (var crop in Model)
{
    <div class="card table-card mb-4">
        <div class="card-header bg-white py-3">
            <h3 class="mb-0">Cultivo: @crop.Name</h3>
        </div>
        <div class="card-body p-4">
            
            <h6 class="text-muted text-uppercase small mb-3">Requisitos para el Análisis</h6>
            <div class="readiness-container">
                @{
                    var readiness = crop.AnalysisReadiness;
                    void RenderRequirement(bool isValid, string text)
                    {
                        <div class="readiness-item">
                            <i class="icon fas @(isValid ? "fa-check-circle" : "fa-times-circle") @(isValid ? "valid" : "invalid")"></i>
                            <span>@text</span>
                        </div>
                    }

                    RenderRequirement(readiness.HasControlGroup, "Grupo 'Control' definido");
                    RenderRequirement(readiness.HasStressGroup, "Grupo 'Estrés' definido");
                    RenderRequirement(readiness.HasMonitoredGroup, "Grupo 'Monitoreado' definido");
                    RenderRequirement(readiness.HasControlWithMask, "Máscara en 'Control'");
                    RenderRequirement(readiness.HasStressWithMask, "Máscara en 'Estrés'");
                }
            </div>
            
            @if (crop.Plants.Any())
            {
                <div class="table-responsive">
                    <table class="table table-hover">
                        <thead>
                            <tr class="text-center text-no-wrap">
                                <th >Planta (Grupo)</th>
                                <th >Estado Actual</th>
                                <th >Máscara Térmica</th>
                                <th >Acciones</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var plant in crop.Plants)
                            {
                                <tr>
                                    <td class="fw-bold">
                                        @plant.Name
                                        <small class="d-block fw-normal text-muted">@plant.ExperimentalGroup.GetDisplayName()</small>
                                    </td>
                                    <td class="text-center">
                                        <span class="status-badge @GetStatusClass(plant.Status)">
                                            @plant.Status.GetDisplayName()
                                        </span>
                                    </td>
                                    <td class="text-center">
                                        @if (plant.HasMask)
                                        {
                                            <i class="fas fa-check-circle text-success fs-5" title="Definida"></i>
                                        }
                                        else
                                        {
                                            <i class="fas fa-times-circle text-danger fs-5" title="No Definida"></i>
                                        }

                                    <td class="text-center">
                                        <a asp-action="Details" asp-route-id="@plant.Id"
                                           class="btn btn-primary btn-sm @(plant.ExperimentalGroup != ExperimentalGroupType.MONITORED || !crop.AnalysisReadiness.IsReady || !plant.HasMask ? "disabled" : "")"
                                           title="Analizar">
                                            <i class="fas fa-chart-line"></i> Analizar
                                        </a>
                                        <a asp-action="CreateMask" asp-route-id="@plant.Id"
                                           class="btn btn-outline-secondary btn-sm"
                                           title="Crear o Editar Máscara">
                                            <i class="fas fa-draw-polygon"></i> Máscara
                                        </a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="alert alert-secondary text-center mt-4">
                    Este cultivo aún no tiene plantas registradas.
                </div>
            }
        </div>
    </div>
}