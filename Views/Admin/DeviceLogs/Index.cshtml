@model ArandanoIRT.Web.Data.DTOs.Admin.PagedResultDto<ArandanoIRT.Web.Data.DTOs.Admin.DeviceLogDisplayDto>
@using ArandanoIRT.Web.Services.Contracts 
@{
    ViewData["Title"] = "Logs de Dispositivo";
    Layout = "_AdminLayout";
    var currentFilters = ViewBag.CurrentFilters as DataQueryFilters ?? new DataQueryFilters();
}

<h1>@ViewData["Title"]</h1>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success" role="alert">@TempData["SuccessMessage"]</div>
}
@if (ViewData["ErrorMessage"] != null)
{
    <div class="alert alert-danger" role="alert">@ViewData["ErrorMessage"]</div>
}

@* Formulario de Filtros *@
<form asp-action="Index" method="get" class="mb-4 p-3 border rounded bg-light">
    <input type="hidden" name="PageNumber" value="1" /> 
    @* PageSize se enviará desde el select de abajo *@

    <div class="row g-3 align-items-end">
        <div class="col-md-3">
            <label for="DeviceId" class="form-label">Dispositivo</label>
            <select name="DeviceId" id="DeviceId" class="form-select" asp-items="ViewBag.AvailableDevicesForFilter">
            </select>
        </div>
        <div class="col-md-3">
            <label for="LogLevel" class="form-label">Nivel de Log</label>
            <select name="LogLevel" id="LogLevel" class="form-select" asp-items="ViewBag.AvailableLogLevels">
            </select>
        </div>
        <div class="col-md-2">
            <label for="StartDate" class="form-label">Desde</label>
            <input type="date" name="StartDate" id="StartDate" class="form-control" value="@currentFilters.StartDate?.ToString("yyyy-MM-dd")" />
        </div>
        <div class="col-md-2">
            <label for="EndDate" class="form-label">Hasta</label>
            <input type="date" name="EndDate" id="EndDate" class="form-control" value="@currentFilters.EndDate?.ToString("yyyy-MM-dd")" />
        </div>
        <div class="col-md-2">
            <button type="submit" class="btn btn-primary w-100">Filtrar</button>
        </div>
    </div>
    <div class="row g-3 align-items-end mt-2">
        <div class="col-md-3 offset-md-7"> 
            <label for="PageSizeForm" class="form-label">Resultados por página:</label>
            <select name="PageSize" id="PageSizeForm" class="form-select form-select-sm">
                <option value="10" selected="@(currentFilters.PageSize == 10)">10</option>
                <option value="25" selected="@(currentFilters.PageSize == 25)">25</option>
                <option value="50" selected="@(currentFilters.PageSize == 50)">50</option>
                <option value="100" selected="@(currentFilters.PageSize == 100)">100</option>
            </select>
        </div>
        <div class="col-md-2">
            <a asp-action="Index" class="btn btn-outline-secondary w-100">Limpiar</a>
        </div>
    </div>
</form>

@if (Model == null || !Model.Items.Any())
{
    <div class="alert alert-info" role="alert">
        No hay logs de dispositivo que coincidan con los filtros aplicados, o no hay logs registrados.
    </div>
}
else
{
    <div class="table-responsive">
        <table class="table table-striped table-hover table-sm">
            <thead class="table-dark">
                <tr>
                    <th>@Html.DisplayNameFor(model => model.Items.First().DeviceName)</th>
                    <th>@Html.DisplayNameFor(model => model.Items.First().LogType)</th>
                    <th>@Html.DisplayNameFor(model => model.Items.First().LogMessage)</th>
                    <th>@Html.DisplayNameFor(model => model.Items.First().LogTimestampServer)</th>
                    <th>@Html.DisplayNameFor(model => model.Items.First().InternalDeviceTemperature)</th> @* NUEVA CABECERA *@
                    <th>@Html.DisplayNameFor(model => model.Items.First().InternalDeviceHumidity)</th>    @* NUEVA CABECERA *@
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Items)
                {
                    <tr>
                        <td>@Html.DisplayFor(modelItem => item.DeviceName) (ID: @item.DeviceId)</td>
                        <td>
                            @if (item.LogType?.ToUpper() == "ERROR")
                            {
                                <span class="badge bg-danger">@item.LogType</span>
                            }
                            else if (item.LogType?.ToUpper() == "WARNING")
                            {
                                <span class="badge bg-warning text-dark">@item.LogType</span>
                            }
                            else
                            {
                                <span class="badge bg-info text-dark">@item.LogType</span>
                            }
                        </td>
                        <td><small>@Html.DisplayFor(modelItem => item.LogMessage)</small></td>
                        <td>@item.LogTimestampServer.ToString("yyyy-MM-dd HH:mm:ss")</td>
                        <td>@item.InternalDeviceTemperature?.ToString("N1")</td> @* NUEVA CELDA, "N1" para 1 decimal, o como prefieras *@
                        <td>@item.InternalDeviceHumidity?.ToString("N1")</td>    @* NUEVA CELDA *@
                    </tr>
                }
            </tbody>
        </table>
    </div>

    @* Paginación (código existente) *@
    <nav aria-label="Paginación de logs">
        <ul class="pagination justify-content-center">
            <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
                <a class="page-link" asp-action="Index"
                   asp-route-DeviceId="@currentFilters.DeviceId"
                   asp-route-LogLevel="@currentFilters.LogLevel"
                   asp-route-StartDate="@currentFilters.StartDate?.ToString("yyyy-MM-dd")"
                   asp-route-EndDate="@currentFilters.EndDate?.ToString("yyyy-MM-dd")"
                   asp-route-pageNumber="@(Model.PageNumber - 1)"
                   asp-route-pageSize="@currentFilters.PageSize">Anterior</a>
            </li>

            @for (int i = Math.Max(1, Model.PageNumber - 2); i <= Math.Min(Model.TotalPages, Model.PageNumber + 2); i++)
            {
                if (i > 0 && i <= Model.TotalPages)
                {
                    <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                        <a class="page-link" asp-action="Index"
                           asp-route-DeviceId="@currentFilters.DeviceId"
                           asp-route-LogLevel="@currentFilters.LogLevel"
                           asp-route-StartDate="@currentFilters.StartDate?.ToString("yyyy-MM-dd")"
                           asp-route-EndDate="@currentFilters.EndDate?.ToString("yyyy-MM-dd")"
                           asp-route-pageNumber="@i"
                           asp-route-pageSize="@currentFilters.PageSize">@i</a>
                    </li>
                }
            }
            @if (Model.PageNumber + 2 < Model.TotalPages)
            {
                <li class="page-item disabled"><span class="page-link">...</span></li>
                <li class="page-item">
                    <a class="page-link" asp-action="Index"
                       asp-route-DeviceId="@currentFilters.DeviceId"
                       asp-route-LogLevel="@currentFilters.LogLevel"
                       asp-route-StartDate="@currentFilters.StartDate?.ToString("yyyy-MM-dd")"
                       asp-route-EndDate="@currentFilters.EndDate?.ToString("yyyy-MM-dd")"
                       asp-route-pageNumber="@Model.TotalPages"
                       asp-route-pageSize="@currentFilters.PageSize">@Model.TotalPages</a>
                </li>
            }

            <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
                <a class="page-link" asp-action="Index"
                   asp-route-DeviceId="@currentFilters.DeviceId"
                   asp-route-LogLevel="@currentFilters.LogLevel"
                   asp-route-StartDate="@currentFilters.StartDate?.ToString("yyyy-MM-dd")"
                   asp-route-EndDate="@currentFilters.EndDate?.ToString("yyyy-MM-dd")"
                   asp-route-pageNumber="@(Model.PageNumber + 1)"
                   asp-route-pageSize="@currentFilters.PageSize">Siguiente</a>
            </li>
        </ul>
    </nav>
    <div class="text-center">
        <small>Página @Model.PageNumber de @Model.TotalPages (Total: @Model.TotalCount logs)</small>
    </div>
}