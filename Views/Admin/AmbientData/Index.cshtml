@model ArandanoIRT.Web.Data.DTOs.Admin.PagedResultDto<ArandanoIRT.Web.Data.DTOs.Admin.SensorDataDisplayDto>
@using ArandanoIRT.Web.Services.Contracts 
@{
    ViewData["Title"] = "Datos Ambientales Registrados";
    Layout = "_AdminLayout";
    // 'filters' ahora viene de ViewBag.CurrentFilters y es del tipo DataQueryFilters
    // Se usa para los asp-route-* en la paginación y para los valores iniciales de los campos de filtro.
    var currentFilters = ViewBag.CurrentFilters as DataQueryFilters ?? new DataQueryFilters();
}

<h1>@ViewData["Title"]</h1>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success" role="alert">@TempData["SuccessMessage"]</div>
}
@if (ViewData["ErrorMessage"] != null)
{
    <div class="alert alert-danger" role="alert">@ViewData["ErrorMessage"]</div>
}

@* Formulario de Filtros *@
<form asp-action="Index" method="get" class="mb-4 p-3 border rounded bg-light">
    @* Al filtrar con el botón, siempre ir a la página 1 *@
    <input type="hidden" name="PageNumber" value="1" />
    @* PageSize se enviará desde el select de abajo *@

    <div class="row g-3 align-items-end">
        <div class="col-md-3">
            <label for="CropId" class="form-label">Cultivo</label>
            @* NAME debe ser "CropId" para que coincida con DataQueryFilters.CropId *@
            <select name="CropId" id="CropId" class="form-select" asp-items="ViewBag.AvailableCrops">
                @* La opción "Todos" y la selección se manejan en el controlador al crear ViewBag.AvailableCrops *@
            </select>
        </div>
        <div class="col-md-3">
            <label for="PlantId" class="form-label">Planta</label>
            @* NAME debe ser "PlantId" *@
            <select name="PlantId" id="PlantId" class="form-select" asp-items="ViewBag.AvailablePlants">
            </select>
        </div>
        <div class="col-md-3">
            <label for="DeviceId" class="form-label">Dispositivo</label>
            @* NAME debe ser "DeviceId" *@
            <select name="DeviceId" id="DeviceId" class="form-select" asp-items="ViewBag.AvailableDevices">
            </select>
        </div>
    </div>
    <div class="row g-3 align-items-end mt-2">
        <div class="col-md-3">
            <label for="StartDate" class="form-label">Desde</label>
            @* NAME debe ser "StartDate" *@
            <input type="datetime-local" name="StartDate" id="StartDate" class="form-control" value="@currentFilters.StartDate?.ToString("yyyy-MM-ddTHH:mm")" />
        </div>
        <div class="col-md-3">
            <label for="EndDate" class="form-label">Hasta</label>
            @* NAME debe ser "EndDate" *@
            <input type="datetime-local" name="EndDate" id="EndDate" class="form-control" value="@currentFilters.EndDate?.ToString("yyyy-MM-ddTHH:mm")" />
        </div>
        <div class="col-md-2">
            <label for="PageSizeForm" class="form-label">Por Página</label>
            @* NAME debe ser "PageSize" *@
            <select name="PageSize" id="PageSizeForm" class="form-select">
                <option value="10" selected="@(currentFilters.PageSize == 10)">10</option>
                <option value="25" selected="@(currentFilters.PageSize == 25)">25</option>
                <option value="50" selected="@(currentFilters.PageSize == 50)">50</option>
                <option value="100" selected="@(currentFilters.PageSize == 100)">100</option>
                <option value="200" selected="@(currentFilters.PageSize == 200)">200</option>
            </select>
        </div>
        <div class="col-md-2">
            <button type="submit" class="btn btn-primary w-100">Filtrar</button>
        </div>
        <div class="col-md-2">
            <a asp-action="Index" class="btn btn-outline-secondary w-100">Limpiar Filtros</a>
        </div>
    </div>
</form>

@if (Model == null || !Model.Items.Any())
{
    <div class="alert alert-info" role="alert">
        No hay datos ambientales que coincidan con los filtros aplicados, o no hay datos registrados.
    </div>
}
else
{
    <div class="table-responsive">
        <table class="table table-striped table-hover table-sm">
            <thead class="table-dark">
                <tr> @* Corregido: Eliminado <tr> anidado innecesario *@
                    <th>@Html.DisplayNameFor(model => model.Items.First().DeviceName)</th>
                    <th>@Html.DisplayNameFor(model => model.Items.First().PlantName)</th>
                    <th>@Html.DisplayNameFor(model => model.Items.First().CropName)</th>
                    <th>@Html.DisplayNameFor(model => model.Items.First().Light)</th>
                    <th>@Html.DisplayNameFor(model => model.Items.First().Temperature)</th>
                    <th>@Html.DisplayNameFor(model => model.Items.First().Humidity)</th>
                    <th>@Html.DisplayNameFor(model => model.Items.First().CityTemperature)</th>
                    <th>@Html.DisplayNameFor(model => model.Items.First().CityHumidity)</th>
                    <th>@Html.DisplayNameFor(model => model.Items.First().CityWeatherCondition)</th> 
                    @* Eliminado: Encabezado para IsNight <th>@Html.DisplayNameFor(model => model.Items.First().IsNight)</th> *@
                    <th>@Html.DisplayNameFor(model => model.Items.First().RecordedAt)</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Items)
                {
                    <tr>
                        <td>@Html.DisplayFor(modelItem => item.DeviceName)</td>
                        <td>@Html.DisplayFor(modelItem => item.PlantName)</td>
                        <td>@Html.DisplayFor(modelItem => item.CropName)</td>
                        <td>@(item.Light?.ToString("0.##") ?? "N/A")</td> @* Formato con máx. 2 decimales *@
                        <td>@item.Temperature.ToString("0.##")</td> @* Formato con máx. 2 decimales *@
                        <td>@item.Humidity.ToString("0.##")</td> @* Formato con máx. 2 decimales *@
                        <td>@(item.CityTemperature?.ToString("0.##") ?? "N/A")</td> @* Formato con máx. 2 decimales *@
                        <td>@(item.CityHumidity?.ToString("0.##") ?? "N/A")</td> @* Formato con máx. 2 decimales *@
                        <td>@Html.DisplayFor(modelItem => item.CityWeatherCondition)</td>
                        @* Eliminado: Celda para IsNight
                        <td>
                            @if (item.IsNight.HasValue)
                            {
                                @(item.IsNight.Value ? "Sí" : "No")
                            }
                            else
                            {
                                <text>N/A</text>
                            }
                        </td>
                        *@
                        <td>@item.RecordedAt.ToString("yyyy-MM-dd HH:mm:ss")</td> 
                    </tr>
                }
            </tbody>
        </table>
    </div>

    @* Paginación *@
    <nav aria-label="Paginación de datos ambientales">
        <ul class="pagination justify-content-center">
            <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
                <a class="page-link" asp-action="Index"
                   asp-route-CropId="@currentFilters.CropId"
                   asp-route-PlantId="@currentFilters.PlantId"
                   asp-route-DeviceId="@currentFilters.DeviceId"
                   asp-route-StartDate="@currentFilters.StartDate?.ToString("yyyy-MM-ddTHH:mm")"
                   asp-route-EndDate="@currentFilters.EndDate?.ToString("yyyy-MM-ddTHH:mm")"
                   asp-route-pageNumber="@(Model.PageNumber - 1)"
                   asp-route-pageSize="@currentFilters.PageSize">Anterior</a>
            </li>

            @for (int i = Math.Max(1, Model.PageNumber - 2); i <= Math.Min(Model.TotalPages, Model.PageNumber + 2); i++)
            {
                if (i > 0 && i <= Model.TotalPages)
                {
                    <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                        <a class="page-link" asp-action="Index"
                           asp-route-CropId="@currentFilters.CropId"
                           asp-route-PlantId="@currentFilters.PlantId"
                           asp-route-DeviceId="@currentFilters.DeviceId"
                           asp-route-StartDate="@currentFilters.StartDate?.ToString("yyyy-MM-ddTHH:mm")"
                           asp-route-EndDate="@currentFilters.EndDate?.ToString("yyyy-MM-ddTHH:mm")"
                           asp-route-pageNumber="@i"
                           asp-route-pageSize="@currentFilters.PageSize">@i</a>
                    </li>
                }
            }
            @if (Model.PageNumber + 2 < Model.TotalPages)
            {
                <li class="page-item disabled"><span class="page-link">...</span></li>
                <li class="page-item">
                    <a class="page-link" asp-action="Index"
                       asp-route-CropId="@currentFilters.CropId"
                       asp-route-PlantId="@currentFilters.PlantId"
                       asp-route-DeviceId="@currentFilters.DeviceId"
                       asp-route-StartDate="@currentFilters.StartDate?.ToString("yyyy-MM-ddTHH:mm")"
                       asp-route-EndDate="@currentFilters.EndDate?.ToString("yyyy-MM-ddTHH:mm")"
                       asp-route-pageNumber="@Model.TotalPages"
                       asp-route-pageSize="@currentFilters.PageSize">@Model.TotalPages</a>
                </li>
            }

            <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
                <a class="page-link" asp-action="Index"
                   asp-route-CropId="@currentFilters.CropId"
                   asp-route-PlantId="@currentFilters.PlantId"
                   asp-route-DeviceId="@currentFilters.DeviceId"
                   asp-route-StartDate="@currentFilters.StartDate?.ToString("yyyy-MM-ddTHH:mm")"
                   asp-route-EndDate="@currentFilters.EndDate?.ToString("yyyy-MM-ddTHH:mm")"
                   asp-route-pageNumber="@(Model.PageNumber + 1)"
                   asp-route-pageSize="@currentFilters.PageSize">Siguiente</a>
            </li>
        </ul>
    </nav>
    <div class="text-center">
        <small>Página @Model.PageNumber de @Model.TotalPages (Total: @Model.TotalCount registros)</small>
    </div>
}